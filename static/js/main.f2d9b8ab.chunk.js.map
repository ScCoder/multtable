{"version":3,"sources":["components/MultTable/InputPanel/KeyBoard/KeyBoard.module.css","components/MultTable/InputPanel/AnswersPannel/AnswersPannel.module.css","components/MultTable/Display/Display.module.css","img/robot.png","components/MultTableApp.module.css","components/MultTable/InputPanel/InputPanel.module.css","components/MultTable/InputPanel/AnswersPannel/AnswersDisplay/AnswersDisplay.module.css","components/MultTable/InputPanel/KeyBoard/KeyBoard.js","components/MultTable/InputPanel/AnswersPannel/AnswersDisplay/AnswersDisplay.js","components/MultTable/InputPanel/AnswersPannel/AnswersPannel.js","components/MultTable/InputPanel/InputPanel.js","components/MultTable/Display/Display.js","api/api.js","components/MultTable/MultTable.js","components/Header/Header.js","components/Footer/Footer.js","components/Profile/Profile.js","components/MultTableApp.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","KeyBoard","onKeyClicked","onButtonCkicked","e","val","target","value","InputElements","map","ch","key","className","s","button","onClick","Fragment","wrapper","AnswersDisplay","title","answers","isWrong","answersElements","answ","i","body_wrong","body","AnswersPannel","wrongAnswers","goodAnswers","InputPanel","batteryCount","batteryCharge","left_panel","center_panel","right_panel","Display","gameActive","startGame","a","b","result","SatatusItems","Object","keys","answKey","status_item","isCorrect","status_item_none","status_item_ok","status_item_failed","display","status_panel","progress_panel","progress_panel_left","progress_panel_right","type","strokeWidth","showInfo","percent","width","main_panel","main_panel_button","profileApi","profile","JSON","parse","localStorage","getItem","profileData","level","setItem","stringify","questionsApi","questionsStats","loadQuestionStatsFromStorage","applyAnswerstoQuestionsStats","saveQuestionStatsToStorage","questions","questionsCount","qStatsElement","CorrectAnswers","push","A","B","initQuestionsStats","forEach","answersElement","MultTable","difficultyLevel","incBatteryCount","useState","SetQuestions","SetA","SetB","SetResult","initialAnswers","1","2","3","4","5","6","7","8","9","10","SetAnswers","currentAnswer","SetCurrentAnswer","setGameActive","setGoodAnswers","setWrongAnswers","setBatteryCharge","useEffect","ApplayAnswer","str","newAnswers","nextAnswer","SetNewOperands","min","max","Math","round","random","Header","Footer","Profile","src","robotImg","MultTableApp","setDifficultyLevel","setBatteryCount","setLevel","page","header","content","newBatteryCount","footer","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f2d9b8ab.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"KeyBoard_wrapper__1GzAe\",\"button\":\"KeyBoard_button__3dzeH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"AnswersPannel_wrapper__2N5jD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"display\":\"Display_display__1fcWn\",\"status_panel\":\"Display_status_panel__3SD93\",\"status_item\":\"Display_status_item__2cddK\",\"status_item_none\":\"Display_status_item_none__1GiBT\",\"status_item_ok\":\"Display_status_item_ok__c_9wv\",\"status_item_failed\":\"Display_status_item_failed__INNj4\",\"progress_panel\":\"Display_progress_panel__2yt0R\",\"progress_panel_left\":\"Display_progress_panel_left__130TM\",\"progress_panel_right\":\"Display_progress_panel_right__29y-n\",\"main_panel\":\"Display_main_panel__28tqZ\",\"main_panel_button\":\"Display_main_panel_button__2rFAY\"};","module.exports = __webpack_public_path__ + \"static/media/robot.8a24d45a.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"MultTableApp_page__23eUV\",\"header\":\"MultTableApp_header__2ibU3\",\"content\":\"MultTableApp_content__1ohzG\",\"profile\":\"MultTableApp_profile__20P06\",\"footer\":\"MultTableApp_footer__2gv8o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"InputPanel_wrapper__1M7tG\",\"left_panel\":\"InputPanel_left_panel__1X2je\",\"right_panel\":\"InputPanel_right_panel__2fxxV\",\"center_panel\":\"InputPanel_center_panel__34aGZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"AnswersDisplay_wrapper__H-unZ\",\"title\":\"AnswersDisplay_title__2WjH-\",\"body\":\"AnswersDisplay_body__OtlX-\",\"body_wrong\":\"AnswersDisplay_body_wrong__3j8__\"};","import React from 'react';\r\nimport s from './KeyBoard.module.css';\r\n\r\nconst KeyBoard = ({ onKeyClicked }) => {\r\n\r\n    const onButtonCkicked = (e) => {\r\n        const val = e.target.value;\r\n        onKeyClicked(val);\r\n    }\r\n\r\n    const inputChars = ['1', '2', '3', '4', '5', '6', '7', '8', '9', 'del', '0', 'Ok']\r\n\r\n    const InputElements = inputChars.map(ch => <button key={ch} className={s.button} onClick={onButtonCkicked} value={ch}>{ch}</button>)\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className = {s.wrapper}>\r\n                {InputElements}\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\nexport default KeyBoard;","import React from 'react';\r\nimport s from './AnswersDisplay.module.css';\r\n\r\nconst AnswersDisplay = ({title,answers,isWrong}) => {\r\n  \r\n    const answersElements = answers.map((answ,i) => <div key={i}>{answ}</div>)\r\n  \r\n    return <React.Fragment>\r\n      <div className={s.wrapper}>\r\n        <div className={s.title}>{title}</div>\r\n        <div className={isWrong?s.body_wrong:s.body}>\r\n          {answersElements}\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  }\r\n\r\n  export default AnswersDisplay;","import React from 'react';\r\nimport AnswersDisplay from './AnswersDisplay/AnswersDisplay';\r\nimport s from './AnswersPannel.module.css';\r\n\r\nconst AnswersPannel = ({wrongAnswers,goodAnswers}) => {\r\n    return (\r\n        <div className = {s.wrapper}>\r\n            <AnswersDisplay title='Ошибочные ответы:' answers={wrongAnswers} isWrong={true} />\r\n            <AnswersDisplay title='Правильные ответы:' answers={goodAnswers} isWrong={false} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AnswersPannel;","import React from 'react';\r\nimport s from './InputPanel.module.css';\r\nimport KeyBoard from './KeyBoard/KeyBoard';\r\nimport AnswersPannel from './AnswersPannel/AnswersPannel';\r\n\r\nconst InputPanel = ({wrongAnswers,goodAnswers,batteryCount,batteryCharge,onKeyClicked}) => {\r\n    return (\r\n      <div className={s.wrapper}>\r\n        <div className={s.left_panel}>\r\n         <AnswersPannel wrongAnswers = {wrongAnswers} goodAnswers={goodAnswers}/>\r\n        </div>\r\n        <div className={s.center_panel}>\r\n          <KeyBoard onKeyClicked={onKeyClicked}/>\r\n        </div>\r\n        <div className={s.right_panel}>          \r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  export default InputPanel;","import React from 'react';\r\nimport s from './Display.module.css';\r\nimport 'antd/dist/antd.css';\r\nimport { Progress } from 'antd';\r\n\r\n\r\nconst Display = ({gameActive,startGame,a,b,result,answers,batteryCount,batteryCharge}) => {\r\n\r\n    const SatatusItems = Object.keys(answers).map(answKey => <div key={answKey}\r\n      className={s.status_item + ' ' + ((answers[answKey].isCorrect === null) ? s.status_item_none : (answers[answKey].isCorrect) ? s.status_item_ok : s.status_item_failed)} >\r\n      {answKey}</div>)\r\n  \r\n    return (\r\n      <div className={s.display}>\r\n        <div className={s.status_panel}>\r\n          {SatatusItems}\r\n        </div>\r\n        <div className = {s.progress_panel}> \r\n        <div className = {s.progress_panel_left}>\r\n        </div>\r\n        <div className = {s.progress_panel_right}>\r\n        <span> \r\n        <Progress type=\"circle\" strokeWidth = {15} showInfo = {false} percent={batteryCharge} width={20} />\r\n        {\" \"}\r\n        {batteryCount}\r\n        </span> \r\n        </div>\r\n        \r\n        </div>\r\n        <div className={s.main_panel}> {gameActive ? `${a}x${b}=${result}` : <button className={s.main_panel_button} onClick={startGame}>Начать!</button>} </div>\r\n      </div>\r\n    )\r\n  }\r\n  export default Display;","\r\nconst MEMORY_ANSWERS_COUNT = 2;\r\n\r\nexport const profileApi = {\r\n\r\n    getProfileData: () => {\r\n\r\n        let profile = JSON.parse(localStorage.getItem('profile'));\r\n\r\n        if (profile === null) {\r\n            profile = { profileData: { batteryCount: 1, level: 0 } }\r\n        }\r\n\r\n        return profile;\r\n\r\n    },\r\n\r\n    saveProfileData: (batteryCount, level) => {\r\n\r\n        localStorage.setItem('profile', JSON.stringify({ profileData: { batteryCount, level } }))\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const questionsApi = {\r\n\r\n    saveQuestionsStats: (answers) => {\r\n\r\n        let questionsStats = loadQuestionStatsFromStorage();\r\n\r\n        applyAnswerstoQuestionsStats(questionsStats, answers);\r\n\r\n        saveQuestionStatsToStorage(questionsStats);\r\n    },\r\n\r\n    getQuestions: () => {\r\n\r\n        const questionsStats = loadQuestionStatsFromStorage();\r\n\r\n        let questions = []; let questionsCount = 0; let i = 0;\r\n        while (questionsCount < 10) {\r\n\r\n            const qStatsElement = questionsStats[i];\r\n            i++;\r\n            if (qStatsElement.CorrectAnswers < MEMORY_ANSWERS_COUNT) {\r\n                questions.push({ A: qStatsElement.A, B: qStatsElement.B });\r\n                questionsCount++;\r\n            }\r\n\r\n        };\r\n\r\n        return questions;\r\n\r\n    }\r\n\r\n}\r\n\r\nconst saveQuestionStatsToStorage = (questionsStats) => {\r\n    localStorage.setItem('questionsStats', JSON.stringify(questionsStats));\r\n}\r\n\r\nconst loadQuestionStatsFromStorage = () => {\r\n\r\n    let questionsStats = JSON.parse(localStorage.getItem('questionsStats'));\r\n\r\n    if (questionsStats === null) {\r\n        questionsStats = initQuestionsStats();\r\n        saveQuestionStatsToStorage(questionsStats);\r\n    }\r\n\r\n    return questionsStats;\r\n}\r\n\r\n\r\nconst applyAnswerstoQuestionsStats = (questionsStats, answers) => {\r\n    questionsStats.forEach(qStatsElement => {\r\n        for (let i = 1; i <= 10; i++) {\r\n            const answersElement = answers[i];\r\n            if (qStatsElement.A == answersElement.A && qStatsElement.B == answersElement.B && answersElement.isCorrect) {\r\n                qStatsElement.CorrectAnswers++;\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nconst initQuestionsStats = () => {\r\n    let questionsStats = [];\r\n    for (let A = 2; A <= 9; A++) {\r\n        for (let B = A; B <= 9; B++) {\r\n            questionsStats.push({ A, B, CorrectAnswers: 0 });\r\n        }\r\n    }\r\n    return questionsStats;\r\n}\r\n","import React, {useState,useEffect} from 'react';\r\n\r\nimport InputPanel from './InputPanel/InputPanel';\r\nimport Display from './Display/Display';\r\nimport {questionsApi,profileApi} from '../../api/api';\r\n\r\nconst getRandomArbitary= (min, max)=>\r\n{\r\n  return Math.round(Math.random() * (max - min) + min);\r\n}\r\n\r\n\r\nconst MultTable = ({difficultyLevel,batteryCount,incBatteryCount}) => {\r\n\r\n  const [questions,SetQuestions] = useState([]);\r\n\r\n  const [a,SetA] = useState(2)\r\n  const [b,SetB] = useState(4)\r\n  const [result,SetResult] = useState(8)\r\n  \r\n  const initialAnswers = {1:{A:2,B:2,isCorrect:null},2:{A:2,B:2,isCorrect:null},3:{A:2,B:2,isCorrect:null},4:{A:2,B:2,isCorrect:null}\r\n    ,5:{A:2,B:2,isCorrect:null},6:{A:2,B:2,isCorrect:null},7:{A:2,B:2,isCorrect:null},8:{A:2,B:2,isCorrect:null},9:{A:2,B:2,isCorrect:null},10:{A:2,B:2,isCorrect:null}}\r\n  const [answers,SetAnswers] = useState(initialAnswers)\r\n\r\n  const [currentAnswer,SetCurrentAnswer] = useState(1)\r\n  const [gameActive,setGameActive] = useState(false)\r\n  const [goodAnswers,setGoodAnswers] = useState([]);\r\n  const [wrongAnswers,setWrongAnswers] = useState([]);\r\n\r\n  const [batteryCharge,setBatteryCharge] = useState(0);\r\n\r\n  useEffect( ()=>{\r\n    if (!gameActive){\r\n     \r\n      if (answers[10].isCorrect != null){\r\n        questionsApi.saveQuestionsStats(answers);\r\n      }\r\n    \r\n      SetQuestions(questionsApi.getQuestions()) \r\n    \r\n\r\n      \r\n    }\r\n  },[gameActive,answers]);\r\n\r\n  const updateCharge = () => {\r\n    if ((batteryCharge + 10) === 100) {\r\n      incBatteryCount();\r\n      setBatteryCharge(0)\r\n    }\r\n    else {\r\n      setBatteryCharge(batteryCharge + 10)\r\n    }\r\n  }\r\n  \r\n\r\n  const ApplayAnswer = (isCorrect) => {\r\n\r\n    const str = `${a}x${b}=${result}`;\r\n\r\n    const newAnswers = { ...answers }\r\n\r\n    newAnswers[currentAnswer] = { A: a, B: b, isCorrect }\r\n\r\n    SetAnswers(newAnswers)\r\n\r\n    const nextAnswer = currentAnswer + 1\r\n\r\n    if (isCorrect) {\r\n\r\n      setGoodAnswers([...goodAnswers, str])\r\n\r\n      updateCharge()\r\n\r\n    } else {\r\n\r\n      setWrongAnswers([...wrongAnswers, str])\r\n\r\n      setBatteryCharge(0)\r\n\r\n    }\r\n\r\n    SetCurrentAnswer(nextAnswer)\r\n\r\n    if (currentAnswer == 10) {\r\n\r\n      setGameActive(false);\r\n\r\n    } else {\r\n\r\n      if (isCorrect) {\r\n\r\n        SetNewOperands(nextAnswer)\r\n      }\r\n    }\r\n  }\r\n\r\n  const SetNewOperands = (currentAnswer) =>{\r\n\r\n    if (getRandomArbitary(0, 1)) {\r\n\r\n      SetA(questions[currentAnswer-1].A)\r\n      SetB(questions[currentAnswer-1].B) \r\n    } else {\r\n      SetA(questions[currentAnswer-1].B)\r\n      SetB(questions[currentAnswer-1].A) \r\n    }  \r\n  }\r\n\r\n  const onKeyClicked = (val) => {\r\n    if (!gameActive) { return; }\r\n    switch (val) {\r\n      case 'Ok':\r\n        ApplayAnswer((a * b == result));\r\n        SetResult('');\r\n        break\r\n      case 'del':\r\n        SetResult('')\r\n        break\r\n      default:\r\n        SetResult(result + val)\r\n    }\r\n  }\r\n\r\n  const startGame = () =>{ \r\n    SetCurrentAnswer(1)\r\n    SetNewOperands(1)    \r\n    SetAnswers(initialAnswers)    \r\n    SetResult('')\r\n    setGameActive(true)\r\n    setWrongAnswers([])\r\n    setGoodAnswers([])\r\n  }\r\n\r\n\r\n  return (\r\n    <div className='mult-table'>\r\n      <Display gameActive={gameActive} startGame = {startGame} a={a} b={b} result={result} answers={answers} batteryCount={batteryCount} batteryCharge={batteryCharge}/>\r\n      <InputPanel wrongAnswers = {wrongAnswers} goodAnswers = {goodAnswers} batteryCount={batteryCount} batteryCharge={batteryCharge} onKeyClicked={onKeyClicked}/>     \r\n    </div>\r\n\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\nexport default MultTable;\r\n\r\n","import React from 'react';\r\n\r\nconst Header = () =>{\r\n    return (\r\n        <header>Тренажер таблицы умножения</header>\r\n    )\r\n}\r\nexport default Header;","import React from 'react';\r\n\r\nconst Footer = () =>{\r\n    return (        \r\n        <footer>У тебя все получится!</footer>\r\n    )\r\n}\r\nexport default Footer;","import React from 'react';\r\nimport robotImg from '../../img/robot.png';\r\n\r\nconst Profile = ({level}) => {\r\n    return (\r\n        <div >     \r\n            <div>Текущий уровень: {level}</div>       \r\n             {<img className = 'profile__img' src={robotImg}/> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React,{useEffect,useState} from 'react';\r\nimport MultTable from './MultTable/MultTable';\r\nimport {user} from '../api/api';\r\nimport s from './MultTableApp.module.css';\r\nimport Header from './Header/Header';\r\nimport Footer from './Footer/Footer';\r\nimport Profile from './Profile/Profile';\r\nimport {profileApi} from '../api/api';\r\n\r\n\r\nconst MultTableApp = () => {\r\n\r\n  const [difficultyLevel, setDifficultyLevel] = useState(0);\r\n  const [batteryCount, setBatteryCount] = useState(0);\r\n  const [level, setLevel] = useState(1);\r\n\r\n  useEffect(() => {\r\n\r\n    const profile = profileApi.getProfileData();\r\n      \r\n    setBatteryCount(profile.profileData.batteryCount);\r\n    setLevel(profile.profileData.level);\r\n    setDifficultyLevel(1);//Заглушка\r\n      \r\n\r\n  }, [])\r\n\r\n  const incBatteryCount = () => {\r\n    const newBatteryCount = batteryCount + 1;\r\n    setBatteryCount(newBatteryCount);\r\n    profileApi.saveProfileData(newBatteryCount,level)\r\n    //user.saveUserData(newBatteryCount);\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={s.page} >\r\n      <div className={s.header}><Header /></div>\r\n      <div className={s.content}><MultTable difficultyLevel={difficultyLevel} batteryCount={batteryCount} incBatteryCount={incBatteryCount} /></div>\r\n      <div className={s.profile}><Profile level = {level}/></div>\r\n      <div className={s.footer}><Footer/></div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MultTableApp;","import React from 'react';\nimport './App.css';\nimport MultTableApp from './components/MultTableApp';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MultTableApp/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}